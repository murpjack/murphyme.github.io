{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/http-requests","result":{"data":{"markdownRemark":{"html":"<p>I had an a-ha moment and realised that the internet is like a big jumble sale of data exchanges. Since then my web developer self is a changed man.<br>\nThe internet is like a jumble sale with lots of individual requests and responses.<br>\nLet's imagine that we, the internet user are a child at the market, with a parent. A common individual transaction might involve a <strong>client</strong>, who is a little like a parent, and the <strong>server</strong>, a salesperson, who is selling a collection of books.\nHopefully this isn't too abstract and helps to explain http-requests.  </p>\n<p>Each http-request needs a client and a server. A client is often a web browser and a server can be an application on a computer that hosts a website.<br>\nWhen a browser wants to get information from somewhere else on the web it sends a <strong>request</strong> to a specific location (URL) and waits for a <strong>response</strong>, much like our child who wants something and has a parent communicate with our salesperson friend.  </p>\n<p>For each http-request there will be a <strong>request</strong> and a <strong>response</strong>. Here are some methods for handling our interaction:  </p>\n<ul>\n<li><strong>GET</strong> - Requests data from a specified resource.  </li>\n<li><strong>POST</strong> - Sends data to a server to create or update a resource  </li>\n<li><strong>PUT</strong> - Sends data to a server to create or update a resource<br>\nIt's different to a POST request because it is Idempotent - a put request can be made multiple times and produce the same result.   </li>\n<li><strong>HEAD</strong> - Asks only for information about the document.   </li>\n<li><strong>DELETE</strong> - Deletes data from a resource.  </li>\n<li>\n<p><strong>OPTIONS</strong> - Describes communication options for a resource.</p>\n<p>note. This <a href=\"https://youtu.be/6dVNdFwqeKs\">video</a> explains more about Idempotence...and cows.</p>\n</li>\n</ul>\n<p><strong>GET</strong> and <strong>POST</strong> are the most common methods in use.</p>\n<p>Important things to remember about each method:</p>\n<ul>\n<li>\n<p>A <strong>GET</strong> request  </p>\n<ul>\n<li>can be Cached and can also be Bookmarked,</li>\n<li>remains in the browser,  </li>\n<li>should not be used for dealing with sensitive information,</li>\n<li>has length restrictions,  </li>\n<li>cannot modify data the get</li>\n</ul>\n</li>\n<li>A <strong>POST</strong> request<br>\n+  can never be Cached or Bookmarked,\n+  does not remain in the browser,<br>\n+  has no restrictions to data length</li>\n</ul>\n<p>Hopefully this is a step towards http-request mastery. Please leave comments.</p>","frontmatter":{"isArticle":true,"date":"April 10, 2018","slug":"/blog/http-requests","title":"HTTP-requests","tag":"#Webdev"},"excerpt":"I had an a-ha moment and realised that the internet is like a big jumble sale of data exchanges. Since then my web developer self is aâ€¦"}},"pageContext":{"slug":"/blog/http-requests"}}}